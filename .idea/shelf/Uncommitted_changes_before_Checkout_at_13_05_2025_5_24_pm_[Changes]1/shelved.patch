Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    android:id=\"@+id/home_layout\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/bottom_navigation\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"60dp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:background=\"?android:attr/windowBackground\"\r\n        app:itemBackground=\"@color/baby_blue\"\r\n        app:itemIconTint=\"@color/black\"\r\n        app:itemTextColor=\"@color/black\"\r\n        app:itemIconSize=\"25dp\"\r\n        app:itemHorizontalTranslationEnabled=\"false\"\r\n        app:itemPaddingBottom=\"10dp\"\r\n        android:theme=\"@style/Theme.SmishingDetectionApp\"\r\n        app:menu=\"@menu/activity_main_drawer\" >\r\n    </com.google.android.material.bottomnavigation.BottomNavigationView>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        tools:context=\".MainActivity\">\r\n\r\n        <Button\r\n            android:id=\"@+id/detections_btn\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"70dp\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:layout_marginBottom=\"124dp\"\r\n            android:background=\"@drawable/buttons_rounded\"\r\n            android:text=\"@string/detectionsBtn\"\r\n            android:textSize=\"20sp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toStartOf=\"@id/scanner_btn\"\r\n            app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/scanner_btn\"\r\n            android:layout_width=\"182dp\"\r\n            android:layout_height=\"70dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:layout_marginBottom=\"124dp\"\r\n            android:background=\"@drawable/buttons_rounded\"\r\n            android:text=\"Risk Scanner\"\r\n            android:textSize=\"20sp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@id/detections_btn\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/HardhatLogo\"\r\n            android:layout_width=\"112dp\"\r\n            android:layout_height=\"106dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.498\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:srcCompat=\"@drawable/new_logo\"\r\n            android:contentDescription=\"@string/logo_description\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/DashboardText\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"@string/app_name\"\r\n            android:textSize=\"32sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.496\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/HardhatLogo\"\r\n            android:textColor=\"@color/navy_blue\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/new_detections\"\r\n            android:layout_width=\"181dp\"\r\n            android:layout_height=\"101dp\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:background=\"@drawable/counter_buttons\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/detections_btn\"\r\n            app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/total_detections\"\r\n            android:layout_width=\"180dp\"\r\n            android:layout_height=\"100dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:background=\"@drawable/counter_buttons\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/detections_btn\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/information_box\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:layout_marginTop=\"200dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:background=\"@drawable/buttons_rounded\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/new_detections\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/new_counter\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"0\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"50dp\"\r\n            android:gravity=\"center\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/new_detections\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/new_detections\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/new_detections\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/textView7\"\r\n            app:layout_constraintVertical_chainStyle=\"packed\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/total_counter\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"0\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"50sp\"\r\n            android:gravity=\"center\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/total_detections\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/total_detections\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/total_detections\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/textView8\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView7\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/new_detectionsTxt\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"16sp\"\r\n            android:gravity=\"center\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/new_counter\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/new_detections\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/new_detections\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/new_detections\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView8\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/total_detectionsTxt\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"16sp\"\r\n            android:gravity=\"center\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/total_counter\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/total_detections\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/total_detections\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/total_detections\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginEnd=\"4dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/total_detections\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/total_detections\"\r\n            app:srcCompat=\"@drawable/baseline_access_time_24\"\r\n            android:contentDescription=\"@string/baseline_access_time_24_alt\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/information_text\"\r\n            android:layout_width=\"352dp\"\r\n            android:layout_height=\"177dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Welcome to Smishing Detection! Your real-time tool to deter and detect any smishing attacks. Your app is ready to smish.\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/information_box\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/information_box\"\r\n            android:gravity=\"center\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/information_box\"\r\n            android:textSize=\"22sp\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView3\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginEnd=\"4dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/information_box\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/information_box\"\r\n            app:srcCompat=\"@drawable/icon_information\"\r\n            android:contentDescription=\"@string/icon_information_alt\"/>\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView4\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginEnd=\"4dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/new_detections\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/new_detections\"\r\n            app:srcCompat=\"@drawable/new_5_svg\"\r\n            android:contentDescription=\"@string/hardhat_logo_alt\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/HardhatLogo\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/debug_btn\"\r\n            android:layout_width=\"113dp\"\r\n            android:layout_height=\"111dp\"\r\n            android:layout_marginStart=\"149dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n\r\n\r\n            android:layout_marginEnd=\"150dp\"\r\n            android:alpha=\"0\"\r\n            android:autoText=\"true\"\r\n\r\n            android:text=\"Button\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/HardhatLogo\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.0\"\r\n            tools:ignore=\"MissingConstraints\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/fragment_container\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:background=\"@drawable/buttons_rounded\"\r\n            android:text=\"Learn More About Smishing\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/scanner_btn\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision f4b20889d6aabdc53d0cf1efac839ec38d7afd45)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1747120127206)
@@ -8,6 +8,12 @@
     android:layout_height="match_parent"
     tools:context=".MainActivity">
 
+    <com.example.smishingdetectionapp.GuestBannerView
+        android:id="@+id/guestBanner"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:elevation="4dp" />
+
     <com.google.android.material.bottomnavigation.BottomNavigationView
         android:id="@+id/bottom_navigation"
         android:layout_width="match_parent"
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.login.LoginActivity\">\r\n\r\n        <!-- Logo -->\r\n        <ImageView\r\n            android:id=\"@+id/logo\"\r\n            android:layout_width=\"112dp\"\r\n            android:layout_height=\"106dp\"\r\n            android:layout_marginTop=\"50dp\"\r\n            android:contentDescription=\"@string/hardhat_logo_alt\"\r\n            android:src=\"@drawable/new_logo\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <!-- Title -->\r\n        <TextView\r\n            android:id=\"@+id/loginTitle\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Welcome Back!\"\r\n            android:textColor=\"@color/navy_blue\"\r\n            android:textSize=\"35sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/logo\" />\r\n\r\n        <!-- Email Input -->\r\n        <TextView\r\n            android:id=\"@+id/emailLabel\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"60dp\"\r\n            android:text=\"@string/prompt_email\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/loginTitle\"\r\n            android:layout_marginStart=\"32dp\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/email\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:autofillHints=\"emailAddress\"\r\n            android:inputType=\"textEmailAddress\"\r\n            android:hint=\"@string/prompt_email\"\r\n            android:importantForAccessibility=\"yes\"\r\n            android:ems=\"10\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"@id/emailLabel\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/emailLabel\"\r\n            android:layout_marginEnd=\"32dp\" />\r\n\r\n        <!-- Password Label -->\r\n        <TextView\r\n            android:id=\"@+id/passwordLabel\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/prompt_password\"\r\n            app:layout_constraintStart_toStartOf=\"@id/emailLabel\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/email\"\r\n            android:layout_marginTop=\"16dp\"/>\r\n\r\n        <!-- Password / PIN Input Field -->\r\n        <EditText\r\n            android:id=\"@+id/password\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:ems=\"10\"\r\n            android:textSize=\"16sp\"\r\n            android:inputType=\"textPassword\"\r\n            android:autofillHints=\"password\"\r\n            android:hint=\"@string/prompt_password\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/passwordLabel\"\r\n            app:layout_constraintStart_toStartOf=\"@id/passwordLabel\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/email\"/>\r\n\r\n        <!-- Toggle Login Type (Password / PIN) -->\r\n        <Button\r\n            android:id=\"@+id/togglePinLogin\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginStart=\"36dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:background=\"@drawable/buttons_rounded\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:paddingHorizontal=\"16dp\"\r\n            android:text=\"@string/login_with_pin\"\r\n            android:textColor=\"@color/navy_blue\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/loginOptionsLayout\" />\r\n\r\n        <!-- Ensuring that remember me and forgot password are next to each other -->\r\n        <LinearLayout\r\n            android:id=\"@+id/loginOptionsLayout\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/password\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\">\r\n\r\n        <!-- Remember Me -->\r\n        <CheckBox\r\n            android:id=\"@+id/remember_me_checkbox\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Remember Me\"\r\n            android:buttonTint=\"#E605445E\"\r\n            android:textColor=\"@color/navy_blue\"\r\n            android:textSize=\"14sp\" />\r\n\r\n        <Space\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_weight=\"1\" />\r\n\r\n        <!-- Forgot Password Button -->\r\n        <TextView\r\n            android:id=\"@+id/forgotPasswordButton\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/forgot_password\"\r\n            android:textColor=\"@color/navy_blue\"\r\n            android:textSize=\"14sp\"\r\n            android:layout_gravity=\"center_vertical\"\r\n            android:paddingStart=\"16dp\" />\r\n        </LinearLayout>\r\n\r\n\r\n        <!-- Login Button -->\r\n        <Button\r\n            android:id=\"@+id/loginButton\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:background=\"@drawable/buttons_rounded\"\r\n            android:backgroundTint=\"@color/baby_blue\"\r\n            android:text=\"@string/action_login_in\"\r\n            android:textColor=\"@color/navy_blue\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/password\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"@id/password\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/togglePinLogin\" />\r\n\r\n        <!-- Register Button -->\r\n        <Button\r\n            android:id=\"@+id/registerButton\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:background=\"@drawable/buttons_rounded\"\r\n            android:backgroundTint=\"@color/baby_blue\"\r\n            android:text=\"@string/action_sign_up\"\r\n            android:textColor=\"@color/navy_blue\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/loginButton\"\r\n            app:layout_constraintStart_toStartOf=\"@id/loginButton\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/loginButton\" />\r\n\r\n        <!-- OR divider -->\r\n        <LinearLayout\r\n            android:id=\"@+id/orDivider\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:orientation=\"horizontal\"\r\n            android:gravity=\"center\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/registerButton\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\">\r\n\r\n                <View\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"1dp\"\r\n                    android:layout_weight=\"1\"\r\n                    android:background=\"#A0A0A0\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/orText\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"or\"\r\n                    android:textColor=\"#808080\"\r\n                    android:paddingStart=\"12dp\"\r\n                    android:paddingEnd=\"12dp\"\r\n                    android:textSize=\"14sp\" />\r\n\r\n                <View\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"1dp\"\r\n                    android:layout_weight=\"1\"\r\n                    android:background=\"#A0A0A0\" />\r\n        </LinearLayout>\r\n\r\n        <!-- Google Sign-In Button -->\r\n        <com.google.android.gms.common.SignInButton\r\n            android:id=\"@+id/googleBtn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"45dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/registerButton\"\r\n            app:layout_constraintStart_toStartOf=\"@id/registerButton\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/registerButton\" />\r\n\r\n        <!-- Progress Bar -->\r\n        <ProgressBar\r\n            android:id=\"@+id/progressbar\"\r\n            style=\"?android:attr/progressBarStyle\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:visibility=\"gone\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <!-- Toggle Password Visibility Icon -->\r\n        <ImageButton\r\n            android:id=\"@+id/togglePasswordVisibility\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:src=\"@drawable/visibilityoff\"\r\n            android:contentDescription=\"@string/toggle_password_visibility\"\r\n            android:background=\"?android:attr/selectableItemBackground\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/password\"\r\n            app:layout_constraintTop_toTopOf=\"@id/password\"\r\n            app:layout_constraintWidth_percent=\"0.1\"\r\n            app:layout_constraintHeight_percent=\"0.1\"\r\n            android:scaleType=\"centerInside\"/>\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_login.xml b/app/src/main/res/layout/activity_login.xml
--- a/app/src/main/res/layout/activity_login.xml	(revision f4b20889d6aabdc53d0cf1efac839ec38d7afd45)
+++ b/app/src/main/res/layout/activity_login.xml	(date 1747120863910)
@@ -215,6 +215,19 @@
             app:layout_constraintStart_toStartOf="@id/registerButton"
             app:layout_constraintTop_toBottomOf="@id/registerButton" />
 
+        <Button
+            android:id="@+id/btnGuestLogin"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp"
+            android:text="Continue as Guest"
+            android:textColor="@color/navy_blue"
+            android:background="@drawable/buttons_rounded"
+            android:backgroundTint="@color/white"
+            android:elevation="4dp"
+            android:textSize="14sp" />
+
+
         <!-- Progress Bar -->
         <ProgressBar
             android:id="@+id/progressbar"
Index: app/src/main/java/com/example/smishingdetectionapp/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smishingdetectionapp;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport java.time.LocalDate;\r\n\r\n\r\nimport android.os.Bundle;\r\nimport android.view.Menu;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport android.os.Handler;\r\n\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.ui.AppBarConfiguration;\r\nimport androidx.navigation.ui.NavigationUI;\r\n\r\nimport com.example.smishingdetectionapp.databinding.ActivityMainBinding;\r\nimport com.example.smishingdetectionapp.detections.DatabaseAccess;\r\nimport com.example.smishingdetectionapp.detections.DetectionsActivity;\r\nimport com.example.smishingdetectionapp.riskmeter.RiskScannerTCActivity;\r\n\r\nimport com.example.smishingdetectionapp.notifications.NotificationPermissionDialogFragment;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\n\r\npublic class MainActivity extends SharedActivity {\r\n    private AppBarConfiguration mAppBarConfiguration;\r\n    private boolean isBackPressed;\r\n\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        ActivityMainBinding binding = ActivityMainBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        mAppBarConfiguration = new AppBarConfiguration.Builder(R.id.nav_home, R.id.nav_news, R.id.nav_settings)\r\n                .build();\r\n\r\n        if (!areNotificationsEnabled()) {\r\n            showNotificationPermissionDialog();\r\n        }\r\n\r\n        BottomNavigationView nav = findViewById(R.id.bottom_navigation);\r\n\r\n        nav.setSelectedItemId(R.id.nav_home);\r\n        nav.setOnItemSelectedListener(menuItem -> {\r\n            int id = menuItem.getItemId();\r\n            if (id == R.id.nav_home) {\r\n                nav.setActivated(true);\r\n                return true;\r\n            } else if (id == R.id.nav_news) {\r\n                startActivity(new Intent(getApplicationContext(), NewsActivity.class));\r\n                overridePendingTransition(0, 0);\r\n                return true;\r\n            } else if (id == R.id.nav_settings) {\r\n                startActivity(new Intent(getApplicationContext(), SettingsActivity.class));\r\n                overridePendingTransition(0, 0);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        Button debug_btn = findViewById(R.id.debug_btn);\r\n        debug_btn.setOnClickListener(v ->\r\n                startActivity(new Intent(MainActivity.this, DebugActivity.class)));\r\n\r\n        Button detections_btn = findViewById(R.id.detections_btn);\r\n        detections_btn.setOnClickListener(v -> {\r\n            startActivity(new Intent(this, DetectionsActivity.class));\r\n        });\r\n\r\n\r\n        Button learnMoreButton = findViewById(R.id.fragment_container);\r\n        learnMoreButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(MainActivity.this, EducationActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n\r\n        Button scanner_btn = findViewById(R.id.scanner_btn);\r\n        scanner_btn.setOnClickListener(v -> {\r\n            startActivity(new Intent(this, RiskScannerTCActivity.class));\r\n\r\n        });\r\n\r\n\r\n        // Database connection\r\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(getApplicationContext());\r\n        databaseAccess.open();\r\n        //setting counter from result\r\n        TextView total_count;\r\n        total_count = findViewById(R.id.total_counter);\r\n        total_count.setText(\"\"+databaseAccess.getCounter());\r\n\r\n\r\n        //closing the connection\r\n        //databaseAccess.close();\r\n        //TODO: Add functionality for new detections.\r\n\r\n        //Setting counter from the result\r\n        //TextView total_count = findViewById(R.id.total_counter);\r\n        //total_count.setText(\"\" + databaseAccess.getCounter());\r\n\r\n        // Closing the connection\r\n        databaseAccess.close();\r\n\r\n    }\r\n    //tap again to exit override. only closes app if back pressed while alert is on screen\r\n    @Override\r\n    public void onBackPressed() {\r\n        if(isBackPressed)\r\n        {\r\n            super.onBackPressed();\r\n            return;\r\n        }\r\n        Toast.makeText(this, \"press back again to exit\", Toast.LENGTH_SHORT).show();\r\n        isBackPressed = true;\r\n\r\n        new Handler().postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                isBackPressed = false;\r\n            }\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    private boolean areNotificationsEnabled() {\r\n        return NotificationManagerCompat.from(this).areNotificationsEnabled();\r\n    }\r\n\r\n    private void showNotificationPermissionDialog() {\r\n        NotificationPermissionDialogFragment dialogFragment = new NotificationPermissionDialogFragment();\r\n        dialogFragment.show(getSupportFragmentManager(), \"notificationPermission\");\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.main, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment_content_main);\r\n        return NavigationUI.navigateUp(navController, mAppBarConfiguration) || super.onSupportNavigateUp();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/smishingdetectionapp/MainActivity.java b/app/src/main/java/com/example/smishingdetectionapp/MainActivity.java
--- a/app/src/main/java/com/example/smishingdetectionapp/MainActivity.java	(revision f4b20889d6aabdc53d0cf1efac839ec38d7afd45)
+++ b/app/src/main/java/com/example/smishingdetectionapp/MainActivity.java	(date 1747120445399)
@@ -39,6 +39,9 @@
         ActivityMainBinding binding = ActivityMainBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
 
+        SharedPreferences prefs = getSharedPreferences("AppPreferences", MODE_PRIVATE);
+        boolean isGuest = prefs.getBoolean("isGuest", false);
+
         mAppBarConfiguration = new AppBarConfiguration.Builder(R.id.nav_home, R.id.nav_news, R.id.nav_settings)
                 .build();
 
@@ -67,13 +70,30 @@
         });
 
         Button debug_btn = findViewById(R.id.debug_btn);
-        debug_btn.setOnClickListener(v ->
-                startActivity(new Intent(MainActivity.this, DebugActivity.class)));
+        if (isGuest) {
+            debug_btn.setEnabled(false);
+            debug_btn.setAlpha(0.5f);
+            debug_btn.setOnClickListener(v ->
+                    Toast.makeText(MainActivity.this, "Debug tools are not available in Guest Mode", Toast.LENGTH_SHORT).show()
+            );
+        } else {
+            debug_btn.setOnClickListener(v ->
+                    startActivity(new Intent(MainActivity.this, DebugActivity.class))
+            );
+        }
 
         Button detections_btn = findViewById(R.id.detections_btn);
-        detections_btn.setOnClickListener(v -> {
-            startActivity(new Intent(this, DetectionsActivity.class));
-        });
+
+        if (isGuest) {
+            detections_btn.setAlpha(0.5f); // Dim the button
+            detections_btn.setOnClickListener(v -> {
+                Toast.makeText(MainActivity.this, "Detections are disabled in Guest Mode", Toast.LENGTH_SHORT).show();
+            });
+        } else {
+            detections_btn.setOnClickListener(v -> {
+                startActivity(new Intent(MainActivity.this, DetectionsActivity.class));
+            });
+        }
 
 
         Button learnMoreButton = findViewById(R.id.fragment_container);
Index: app/src/main/java/com/example/smishingdetectionapp/ui/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smishingdetectionapp.ui.login;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\n//import android.text.method.HideReturnsTransformationMethod;\r\n//import android.text.method.PasswordTransformationMethod;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.StringRes;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.example.smishingdetectionapp.BuildConfig;\r\nimport com.example.smishingdetectionapp.DataBase.DBresult;\r\nimport com.example.smishingdetectionapp.DataBase.Retrofitinterface;\r\nimport com.example.smishingdetectionapp.MainActivity;\r\nimport com.example.smishingdetectionapp.R;\r\nimport com.example.smishingdetectionapp.SharedActivity;\r\nimport com.example.smishingdetectionapp.databinding.ActivityLoginBinding;\r\nimport com.example.smishingdetectionapp.detections.DatabaseAccess;\r\nimport com.example.smishingdetectionapp.ui.Register.RegisterMain;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.SignInButton;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private LoginViewModel loginViewModel;\r\n    private ActivityLoginBinding binding;\r\n    private Retrofit retrofit;\r\n    private Retrofitinterface retrofitinterface;\r\n    private String BASE_URL = BuildConfig.SERVERIP;\r\n    private boolean isPasswordVisible = false;\r\n\r\n    GoogleSignInOptions gso;\r\n    GoogleSignInClient gsc;\r\n    private boolean isPinLogin = false;  // Flag for PIN login\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // Inflate layout\r\n        binding = ActivityLoginBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        // Initialize Retrofit\r\n        retrofit = new Retrofit.Builder()\r\n                .baseUrl(BASE_URL)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build();\r\n        retrofitinterface = retrofit.create(Retrofitinterface.class);\r\n\r\n        // Check if user is already logged in\r\n        if (isUserLoggedIn()) {\r\n            navigateToMainActivity();\r\n            return;\r\n        }\r\n\r\n        // ViewModel setup\r\n        loginViewModel = new ViewModelProvider(this, new LoginViewModelFactory())\r\n                .get(LoginViewModel.class);\r\n\r\n        // View bindings\r\n        final EditText usernameEditText = binding.email;\r\n        final EditText passwordEditText = binding.password;\r\n        final Button loginButton = binding.loginButton;\r\n        final ProgressBar loadingProgressBar = binding.progressbar;\r\n        final SignInButton googleBtn = binding.googleBtn;\r\n        final Button registerButton = binding.registerButton;\r\n        final ImageButton togglePasswordVisibility = binding.togglePasswordVisibility;\r\n        final Button togglePinLogin = binding.togglePinLogin;  // Added missing reference for togglePinLogin button\r\n\r\n        // Toggle functionality for PIN and Password login\r\n        togglePinLogin.setOnClickListener(v -> {\r\n            passwordEditText.setText(\"\");\r\n\r\n\r\n            if (isPinLogin) {\r\n                // Switch to password login\r\n                passwordEditText.setHint(\"Password\");\r\n                passwordEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\r\n                loginButton.setText(\"Login\");\r\n                togglePinLogin.setText(\"Login with PIN\");\r\n                isPinLogin = false;\r\n            } else {\r\n                // Switch to PIN login\r\n                passwordEditText.setHint(\"Enter 6-digit PIN\");\r\n                passwordEditText.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_VARIATION_PASSWORD);\r\n                loginButton.setText(\"Login with PIN\");\r\n                togglePinLogin.setText(\"Login with Password\");\r\n                isPinLogin = true;\r\n            }\r\n            passwordEditText.requestFocus();\r\n        });\r\n\r\n        // Handle login button click\r\n        loginButton.setOnClickListener(v -> {\r\n            String input = passwordEditText.getText().toString();\r\n            if (isPinLogin) {\r\n                // Handle PIN login\r\n                if (input.length() != 6) {\r\n                    passwordEditText.setError(\"PIN must be 6 digits\");\r\n                    return;\r\n                }\r\n                loginWithPin(input);\r\n            } else {\r\n                // Handle password login\r\n                String email = usernameEditText.getText().toString();\r\n                if (email.isEmpty() || input.isEmpty()) {\r\n                    Toast.makeText(LoginActivity.this, \"Email and Password must not be empty\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                loginWithPassword(email, input);\r\n            }\r\n        });\r\n\r\n        // Handle register button click\r\n        registerButton.setOnClickListener(v -> {\r\n            startActivity(new Intent(this, RegisterMain.class));\r\n            finish();\r\n        });\r\n\r\n        // Handle Google Sign-In setup\r\n        gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestEmail()\r\n                .build();\r\n        gsc = GoogleSignIn.getClient(this, gso);\r\n\r\n        // Sign out of Google account to allow fresh authentication\r\n        gsc.signOut().addOnCompleteListener(task -> {\r\n            Toast.makeText(this, \"Signed out. Ready for fresh authentication.\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n        // Handle Google Sign-In button click\r\n        googleBtn.setOnClickListener(v -> {\r\n            GoogleSignInAccount acct = GoogleSignIn.getLastSignedInAccount(this);\r\n            if (acct != null) {\r\n                signOutGoogle(() -> signInGoogle());\r\n            } else {\r\n                signInGoogle();\r\n            }\r\n        });\r\n\r\n        // Observe LoginFormState\r\n        loginViewModel.getLoginFormState().observe(this, loginFormState -> {\r\n            if (loginFormState == null) return;\r\n            loginButton.setEnabled(loginFormState.isDataValid());\r\n            if (loginFormState.getUsernameError() != null) {\r\n                usernameEditText.setError(getString(loginFormState.getUsernameError()));\r\n            }\r\n            if (loginFormState.getPasswordError() != null) {\r\n                passwordEditText.setError(getString(loginFormState.getPasswordError()));\r\n            }\r\n        });\r\n\r\n        loginViewModel.getLoginResult().observe(this, new Observer<LoginResult>() {\r\n            @Override\r\n            public void onChanged(@Nullable LoginResult loginResult) {\r\n                if (loginResult == null) {\r\n                    return;\r\n                }\r\n                loadingProgressBar.setVisibility(View.GONE);\r\n                if (loginResult.getError() != null) {\r\n                    showLoginFailed(loginResult.getError());\r\n                }\r\n                if (loginResult.getSuccess() != null) {\r\n                    updateUiWithUser(loginResult.getSuccess());\r\n                }\r\n                setResult(Activity.RESULT_OK);\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n        /*\r\n        // Password visibility toggle\r\n        togglePasswordVisibility.setOnClickListener(v -> {\r\n            // Check the current input type to determine if the password is visible\r\n            int currentInputType = passwordEditText.getInputType();\r\n\r\n            if (currentInputType == (InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD)) {\r\n                // If the password is currently hidden (password transformation is applied), show the password\r\n                passwordEditText.setInputType(InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD); // Show the password\r\n                togglePasswordVisibility.setImageResource(R.drawable.visibility);  // Open eye icon\r\n            } else {\r\n                // If the password is currently visible, hide the password\r\n                passwordEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD); // Hide the password\r\n                togglePasswordVisibility.setImageResource(R.drawable.visibilityoff);  // Closed eye icon\r\n            }\r\n\r\n            // Move the cursor to the end\r\n            passwordEditText.setSelection(passwordEditText.getText().length());\r\n        });\r\n\r\n    }*/\r\n\r\n        togglePasswordVisibility.setOnClickListener(v -> {\r\n            if (isPasswordVisible) {\r\n                // Hide password\r\n                passwordEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\r\n                togglePasswordVisibility.setImageResource(R.drawable.visibilityoff); // lighter icon\r\n                isPasswordVisible = false;\r\n            } else {\r\n                // Show password\r\n                passwordEditText.setInputType(InputType.TYPE_CLASS_TEXT);\r\n                togglePasswordVisibility.setImageResource(R.drawable.visibility); // darker icon\r\n                isPasswordVisible = true;\r\n            }\r\n\r\n            // cursor stays at end of input\r\n            passwordEditText.setSelection(passwordEditText.getText().length());\r\n        });\r\n\r\n\r\n    }\r\n    //\r\n\r\n    // Google Sign-In\r\n    void signInGoogle() {\r\n        Intent signInIntent = gsc.getSignInIntent();\r\n        startActivityForResult(signInIntent, 1000);\r\n    }\r\n\r\n    // Google Sign-Out\r\n    void signOutGoogle(Runnable onSignOutComplete) {\r\n        gsc.signOut().addOnCompleteListener(task -> {\r\n            Toast.makeText(this, \"Signed out of Google account.\", Toast.LENGTH_SHORT).show();\r\n            onSignOutComplete.run();\r\n        });\r\n    }\r\n\r\n    // Handle the result of the Google Sign-In\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 1000) {\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try {\r\n                task.getResult(ApiException.class);\r\n                navigateToMainActivity();\r\n            } catch (ApiException e) {\r\n                Toast.makeText(getApplicationContext(), \"Authentication failed\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n    private void loginWithPin(String pin) {\r\n        // Open the database\r\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(this);\r\n        databaseAccess.open();\r\n\r\n        // Validate the PIN\r\n        boolean isValid = databaseAccess.validatePin(pin);\r\n\r\n        if (isValid) {\r\n            // PIN is valid\r\n            Toast.makeText(LoginActivity.this, \"PIN verified successfully\", Toast.LENGTH_SHORT).show();\r\n            navigateToMainActivity();\r\n        } else {\r\n            // Invalid PIN\r\n            Toast.makeText(LoginActivity.this, \"Invalid PIN. Please try again.\", Toast.LENGTH_LONG).show();\r\n        }\r\n\r\n        // Close the database\r\n        databaseAccess.close();\r\n    }\r\n\r\n     */\r\n\r\n    private void loginWithPin(String pin) {\r\n        // For testing purposes, simulate a successful PIN login\r\n        Toast.makeText(LoginActivity.this, \"PIN verified successfully (bypassed for testing)\", Toast.LENGTH_SHORT).show();\r\n        navigateToMainActivity();\r\n    }\r\n\r\n\r\n    /*\r\n    private void loginWithPassword(String email, String password) {\r\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(this);\r\n        databaseAccess.open();\r\n\r\n        boolean isValid = databaseAccess.validateLogin(email, password);\r\n\r\n        if (isValid) {\r\n            navigateToMainActivity();\r\n        } else {\r\n            Toast.makeText(LoginActivity.this, \"Invalid email or password\", Toast.LENGTH_LONG).show();\r\n        }\r\n\r\n        databaseAccess.close();\r\n    }\r\n\r\n     */\r\n\r\n    private void loginWithPassword(String email, String password) {\r\n        // For testing purposes, simulate a successful login\r\n        Toast.makeText(LoginActivity.this, \"Login successful (bypassed for testing)\", Toast.LENGTH_SHORT).show();\r\n        navigateToMainActivity();\r\n    }\r\n\r\n\r\n    private void handleLoginDialog() {\r\n        final EditText usernameEditText = binding.email;\r\n        final EditText passwordEditText = binding.password;\r\n\r\n        HashMap<String, String> map = new HashMap<>();\r\n        map.put(\"email\", usernameEditText.getText().toString());\r\n        map.put(\"password\", passwordEditText.getText().toString());\r\n\r\n        Call<DBresult> call = retrofitinterface.executeLogin(map);\r\n        call.enqueue(new Callback<DBresult>() {\r\n            @Override\r\n            public void onResponse(Call<DBresult> call, Response<DBresult> response) {\r\n                if (response.code() == 200) {\r\n                    navigateToMainActivity();\r\n                } else if (response.code() == 404) {\r\n                    Toast.makeText(LoginActivity.this, \"Wrong Credentials\", Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<DBresult> call, Throwable throwable) {\r\n                Toast.makeText(LoginActivity.this, throwable.getMessage(), Toast.LENGTH_LONG).show();\r\n                navigateToMainActivity();\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean isUserLoggedIn() {\r\n        // Placeholder for checking login state\r\n        return false;\r\n    }\r\n\r\n    private void navigateToMainActivity() {\r\n        Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    private void updateUiWithUser(LoggedInUserView model) {\r\n        String welcome = getString(R.string.welcome) + model.getDisplayName();\r\n        Toast.makeText(getApplicationContext(), welcome, Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    private void showLoginFailed(@StringRes Integer errorString) {\r\n        Toast.makeText(getApplicationContext(), errorString, Toast.LENGTH_SHORT).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/smishingdetectionapp/ui/login/LoginActivity.java b/app/src/main/java/com/example/smishingdetectionapp/ui/login/LoginActivity.java
--- a/app/src/main/java/com/example/smishingdetectionapp/ui/login/LoginActivity.java	(revision f4b20889d6aabdc53d0cf1efac839ec38d7afd45)
+++ b/app/src/main/java/com/example/smishingdetectionapp/ui/login/LoginActivity.java	(date 1747120847205)
@@ -90,7 +90,8 @@
         final SignInButton googleBtn = binding.googleBtn;
         final Button registerButton = binding.registerButton;
         final ImageButton togglePasswordVisibility = binding.togglePasswordVisibility;
-        final Button togglePinLogin = binding.togglePinLogin;  // Added missing reference for togglePinLogin button
+        final Button togglePinLogin = binding.togglePinLogin;// Added missing reference for togglePinLogin button
+        Button guestLoginButton = findViewById(R.id.btnGuestLogin);
 
         // Toggle functionality for PIN and Password login
         togglePinLogin.setOnClickListener(v -> {
@@ -142,6 +143,20 @@
             finish();
         });
 
+        guestLoginButton.setOnClickListener(v -> {
+            // Store guest mode flag in SharedPreferences
+            getSharedPreferences("AppPreferences", MODE_PRIVATE)
+                    .edit()
+                    .putBoolean("isGuest", true)
+                    .apply();
+
+            // Navigate to MainActivity
+            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
+            startActivity(intent);
+            finish();
+        });
+
+
         // Handle Google Sign-In setup
         gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                 .requestEmail()
Index: app/src/main/res/layout/view_guest_banner.xml
===================================================================
diff --git a/app/src/main/res/layout/view_guest_banner.xml b/app/src/main/res/layout/view_guest_banner.xml
new file mode 100644
--- /dev/null	(date 1747119770180)
+++ b/app/src/main/res/layout/view_guest_banner.xml	(date 1747119770180)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <TextView
+        android:id="@+id/guest_banner_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="You are using Guest Mode – limited features available"
+        android:background="#FFF9C4"
+        android:padding="12dp"
+        android:textColor="#000000"
+        android:textStyle="bold" />
+
+    <Button
+        android:id="@+id/login_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Sign In"
+        android:layout_margin="12dp"
+        android:backgroundTint="@color/baby_blue"
+        android:textColor="@color/black" />
+</merge>
Index: app/src/main/java/com/example/smishingdetectionapp/GuestBannerView.java
===================================================================
diff --git a/app/src/main/java/com/example/smishingdetectionapp/GuestBannerView.java b/app/src/main/java/com/example/smishingdetectionapp/GuestBannerView.java
new file mode 100644
--- /dev/null	(date 1747120018135)
+++ b/app/src/main/java/com/example/smishingdetectionapp/GuestBannerView.java	(date 1747120018135)
@@ -0,0 +1,48 @@
+package com.example.smishingdetectionapp;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.widget.Button;
+import android.widget.LinearLayout;
+
+import com.example.smishingdetectionapp.ui.login.LoginActivity;
+
+public class GuestBannerView extends LinearLayout {
+
+    public GuestBannerView(Context context) {
+        super(context);
+        init(context);
+    }
+
+    public GuestBannerView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        init(context);
+    }
+
+    private void init(Context context) {
+        LayoutInflater.from(context).inflate(R.layout.view_guest_banner, this, true);
+        setOrientation(VERTICAL);
+
+        SharedPreferences prefs = context.getSharedPreferences("AppPrefs", Context.MODE_PRIVATE);
+        boolean isGuest = prefs.getBoolean("isGuest", false);
+
+        if (isGuest) {
+            setVisibility(VISIBLE);
+
+            Button loginButton = findViewById(R.id.login_button);
+            if (loginButton != null) {
+                loginButton.setVisibility(VISIBLE);
+                loginButton.setOnClickListener(v -> {
+                    Intent intent = new Intent(context, LoginActivity.class);
+                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                    context.startActivity(intent);
+                });
+            }
+        } else {
+            setVisibility(GONE);
+        }
+    }
+}
\ No newline at end of file
